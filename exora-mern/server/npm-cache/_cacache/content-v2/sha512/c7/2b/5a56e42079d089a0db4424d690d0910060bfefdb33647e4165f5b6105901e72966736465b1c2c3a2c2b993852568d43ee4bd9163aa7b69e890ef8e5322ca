{"_id":"dria","_rev":"3-d492d8dce39435c634d365ba380e8933","name":"dria","dist-tags":{"latest":"0.0.4"},"versions":{"0.0.1":{"name":"dria","version":"0.0.1","author":{"name":"FirstBatch Team","email":"dev@firstbatch.xyz"},"license":"Apache-2.0","contributors":[{"name":"Erhan Tezcan","email":"erhan@firstbatch.xyz","url":"https://github.com/erhant"}],"scripts":{"build":"bun run ./build.ts","b":"bun run build","check":"tsc --noEmit && echo \"All good.\"","format":"prettier --check '**/*.ts'","lint":"eslint '**/*.ts' && echo 'All good.'","test":"bun test --timeout 15000","t":"bun run test","proto:code":"npx pbjs ./proto/insert.proto -w commonjs -t static-module -o ./proto/insert.js","proto:type":"npx pbts ./proto/insert.js -o ./proto/insert.d.ts","proto":"bun proto:code && bun proto:type"},"type":"module","module":"index.ts","dependencies":{"axios":"^1.6.5","zod":"^3.22.4"},"devDependencies":{"@types/bun":"^1.0.4","@typescript-eslint/eslint-plugin":"^6.20.0","bun-plugin-dts":"^0.2.1","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^5.1.3","prettier":"^3.2.4","protobufjs-cli":"^1.1.2","typescript":"^5.0.0"},"prettier":{"printWidth":120},"keywords":["dria","blockchain","firstbatch","hnsw","ai","vector","vectordb","rag"],"_id":"dria@0.0.1","gitHead":"89e32d17b0677d88be1c913449aded7053ec6145","description":"<p align=\"center\">   <img src=\"./logo.svg\" alt=\"logo\" width=\"142\"> </p>","_nodeVersion":"18.19.0","_npmVersion":"10.2.3","dist":{"integrity":"sha512-/zZpG84KCwkntO8XWMvkW8rGAy3viAClZ0sdNhvdz/0XsFp1eZHVjNbU48W8DR5R9+8dTRjql+g4qR7TDSQopw==","shasum":"61878b339b4d1c3f2af1edbe6b1a18d0373b2915","tarball":"https://registry.npmjs.org/dria/-/dria-0.0.1.tgz","fileCount":5,"unpackedSize":124967,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC0V+/6HTVB/w7L5gdupArZt4MG7e8C9lZCFAdjBzEKLgIhAI5u9cRqOiuDbik5NWL9YM0mxJ+iSKxbsby8t1zVMA7s"}]},"_npmUser":{"name":"firstbatch","email":"developer@firstbatch.xyz"},"directories":{},"maintainers":[{"name":"firstbatch","email":"developer@firstbatch.xyz"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/dria_0.0.1_1706866949696_0.033701216314568905"},"_hasShrinkwrap":false},"0.0.2":{"name":"dria","version":"0.0.2","license":"Apache-2.0","author":{"name":"FirstBatch Team","email":"dev@firstbatch.xyz"},"contributors":[{"name":"Erhan Tezcan","email":"erhan@firstbatch.xyz","url":"https://github.com/erhant"}],"type":"module","module":"index.ts","main":"build/index.js","types":"build/index.d.ts","scripts":{"build":"bun run ./build.ts","b":"bun run build","check":"tsc --noEmit && echo \"All good.\"","format":"prettier --check '**/*.ts'","lint":"eslint '**/*.ts' && echo 'All good.'","test":"bun test --timeout 15000","t":"bun run test","proto:code":"npx pbjs ./proto/insert.proto -w commonjs -t static-module -o ./proto/insert.js","proto:type":"npx pbts ./proto/insert.js -o ./proto/insert.d.ts","proto":"bun proto:code && bun proto:type"},"dependencies":{"axios":"^1.6.5","zod":"^3.22.4"},"devDependencies":{"@types/bun":"^1.0.4","@typescript-eslint/eslint-plugin":"^6.20.0","bun-plugin-dts":"^0.2.1","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^5.1.3","prettier":"^3.2.4","protobufjs-cli":"^1.1.2","typescript":"^5.0.0"},"prettier":{"printWidth":120},"keywords":["dria","blockchain","firstbatch","hnsw","ai","vector","vectordb","rag"],"_id":"dria@0.0.2","gitHead":"30f64a0af84b9785020335edfcacc2885a71a268","description":"<p align=\"center\">   <img src=\"https://raw.githubusercontent.com/firstbatchxyz/dria-js-client/master/logo.svg\" alt=\"logo\" width=\"142\"> </p>","_nodeVersion":"18.19.0","_npmVersion":"10.2.3","dist":{"integrity":"sha512-debeuaLNboHn3kJe8vtI+9jBwfTIYDVtnHJgAcaJj0rOgzHjxlHqO9rcI2LfwJfNyfpg89OARujcKE0ccYinGA==","shasum":"6f6485fedde75604ee527bec35c3e9e15b135f7b","tarball":"https://registry.npmjs.org/dria/-/dria-0.0.2.tgz","fileCount":5,"unpackedSize":126482,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBChEE3ho7XjnmQqpJxXaIYoc57FNHmGQ3d5jkaMY03QAiAdQ/n3rztJVXmo/T0atBcVBCeuiHTDS6oxqsYG6pMLjw=="}]},"_npmUser":{"name":"firstbatch","email":"developer@firstbatch.xyz"},"directories":{},"maintainers":[{"name":"firstbatch","email":"developer@firstbatch.xyz"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/dria_0.0.2_1706870531391_0.7353242483062465"},"_hasShrinkwrap":false},"0.0.3":{"name":"dria","version":"0.0.3","license":"Apache-2.0","author":{"name":"FirstBatch Team","email":"dev@firstbatch.xyz"},"contributors":[{"name":"Erhan Tezcan","email":"erhan@firstbatch.xyz","url":"https://github.com/erhant"}],"type":"module","module":"index.ts","main":"build/index.js","types":"build/index.d.ts","scripts":{"build":"bun run ./build.ts","b":"bun run build","check":"tsc --noEmit && echo \"All good.\"","format":"prettier --check '**/*.ts'","lint":"eslint '**/*.ts' && echo 'All good.'","test":"bun test --timeout 15000","t":"bun run test","proto:code":"npx pbjs ./proto/insert.proto -w commonjs -t static-module -o ./proto/insert.js","proto:type":"npx pbts ./proto/insert.js -o ./proto/insert.d.ts","proto":"bun proto:code && bun proto:type"},"dependencies":{"axios":"^1.6.5","zod":"^3.22.4"},"devDependencies":{"@types/bun":"^1.0.4","@typescript-eslint/eslint-plugin":"^6.20.0","bun-plugin-dts":"^0.2.1","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^5.1.3","prettier":"^3.2.4","protobufjs-cli":"^1.1.2","typescript":"^5.0.0"},"prettier":{"printWidth":120},"keywords":["dria","blockchain","firstbatch","hnsw","ai","vector","vectordb","rag"],"_id":"dria@0.0.3","gitHead":"2c3fcf2e44ef1cf35e60a550e05308fc8f60b2af","description":"<p align=\"center\">   <!-- <img src=\"https://raw.githubusercontent.com/firstbatchxyz/dria-js-client/master/logo.svg\" alt=\"logo\" width=\"142\"> -->   <img src=\"./logo.svg\" alt=\"logo\" width=\"142\"> </p>","_nodeVersion":"18.19.0","_npmVersion":"10.2.3","dist":{"integrity":"sha512-IC3dlyrZb6xnWSNmrCmULtT2P1U+028M2YV/daX36VmFFxktNigb6aajZD/bBJm+7BzdKyXch1F68bWx0KWNxw==","shasum":"d59486b813c7aaefbf4dcdc653e78af286c41ca1","tarball":"https://registry.npmjs.org/dria/-/dria-0.0.3.tgz","fileCount":5,"unpackedSize":127343,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD3yfCfUolQDXGw9uQSLNRlqRt3YlNa32nlTwfWlXhf+AIgO+SA0tZsiGO9oa03Bvw3HZ+6Ze2zuqlJNCPAqmYKMVY="}]},"_npmUser":{"name":"firstbatch","email":"developer@firstbatch.xyz"},"directories":{},"maintainers":[{"name":"firstbatch","email":"developer@firstbatch.xyz"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/dria_0.0.3_1706894499295_0.36122118022469074"},"_hasShrinkwrap":false},"0.0.4":{"name":"dria","version":"0.0.4","license":"Apache-2.0","author":{"name":"FirstBatch Team","email":"dev@firstbatch.xyz"},"contributors":[{"name":"Erhan Tezcan","email":"erhan@firstbatch.xyz","url":"https://github.com/erhant"}],"type":"module","module":"index.ts","main":"build/index.js","types":"build/index.d.ts","scripts":{"build":"bun run ./build.ts","b":"bun run build","check":"tsc --noEmit && echo \"All good.\"","format":"prettier --check '**/*.ts'","lint":"eslint '**/*.ts' && echo 'All good.'","test":"bun test --timeout 15000","t":"bun run test","test:local":"LOCAL_TEST=true bun test local --timeout 15000","proto:code":"npx pbjs ./proto/insert.proto -w commonjs -t static-module -o ./proto/insert.js","proto:type":"npx pbts ./proto/insert.js -o ./proto/insert.d.ts","proto":"bun proto:code && bun proto:type"},"dependencies":{"axios":"^1.6.5","zod":"^3.22.4"},"devDependencies":{"@types/bun":"^1.0.4","@typescript-eslint/eslint-plugin":"^6.20.0","bun-plugin-dts":"^0.2.1","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^5.1.3","prettier":"^3.2.4","protobufjs-cli":"^1.1.2","typescript":"^5.0.0"},"prettier":{"printWidth":120},"keywords":["dria","blockchain","firstbatch","hnsw","ai","vector","vectordb","rag"],"_id":"dria@0.0.4","gitHead":"d0adfc057cd98d1a50ec9656d4eb90e4695f7a31","description":"<p align=\"center\">   <img src=\"https://raw.githubusercontent.com/firstbatchxyz/dria-js-client/master/logo.svg\" alt=\"logo\" width=\"142\"> </p>","_nodeVersion":"18.19.1","_npmVersion":"10.2.4","dist":{"integrity":"sha512-5o37m6XCdMNGON11r3DNRZwRDUM05KmMTVaiGY5SWf47g9P2J5inskdGe5a3GLOV/dxyVVsE3ZNF8vyq7H8tvQ==","shasum":"b6bf3396ab3a6493311b09de853c0030a1dd10d9","tarball":"https://registry.npmjs.org/dria/-/dria-0.0.4.tgz","fileCount":5,"unpackedSize":131275,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC/rFd9PXa7ENdFqnuG6KvS94mKtTt/aoTfiuwHTbDrWwIhAKx54pnoegKgK2Qbj5+BcAfYIn/bfqxNhUD9234seUNJ"}]},"_npmUser":{"name":"firstbatch","email":"developer@firstbatch.xyz"},"directories":{},"maintainers":[{"name":"firstbatch","email":"developer@firstbatch.xyz"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/dria_0.0.4_1708953031030_0.34942593642203734"},"_hasShrinkwrap":false}},"time":{"created":"2024-02-02T09:42:29.696Z","0.0.1":"2024-02-02T09:42:29.893Z","modified":"2024-02-26T13:10:31.607Z","0.0.2":"2024-02-02T10:42:11.551Z","0.0.3":"2024-02-02T17:21:39.517Z","0.0.4":"2024-02-26T13:10:31.203Z"},"maintainers":[{"name":"firstbatch","email":"developer@firstbatch.xyz"}],"description":"<p align=\"center\">   <img src=\"https://raw.githubusercontent.com/firstbatchxyz/dria-js-client/master/logo.svg\" alt=\"logo\" width=\"142\"> </p>","keywords":["dria","blockchain","firstbatch","hnsw","ai","vector","vectordb","rag"],"contributors":[{"name":"Erhan Tezcan","email":"erhan@firstbatch.xyz","url":"https://github.com/erhant"}],"author":{"name":"FirstBatch Team","email":"dev@firstbatch.xyz"},"license":"Apache-2.0","readme":"<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/firstbatchxyz/dria-js-client/master/logo.svg\" alt=\"logo\" width=\"142\">\n</p>\n\n<p align=\"center\">\n  <h1 align=\"center\">\n    DriaJS\n  </h1>\n  <p align=\"center\">\n    <i>Dria JS client.</i>\n  </p>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\">\n        <img alt=\"License: MIT\" src=\"https://img.shields.io/badge/license-MIT-7CB9E8.svg\">\n    </a>\n    <a href=\"https://www.npmjs.com/package/dria\" target=\"_blank\">\n        <img alt=\"NPM\" src=\"https://img.shields.io/npm/v/dria?logo=npm&color=CB3837\">\n    </a>\n</p>\n\nDriaJS client is a library & CLI that integrates [Dria](https://dria.co/) to your application, providing a convenient interface to harness the capabilities of Dria's vector search and retrieval services.\n\n- [x] Create & manage your knowledge bases on Dria.\n- [x] Make vector based queries, text based searches or fetch vectors by their IDs.\n- [x] Insert vectors & texts to your existing knowledge.\n- [x] Integrated into [LangChainJS](./examples/langchain/).\n\n## Installation\n\nInstall Dria from NPM:\n\n```sh\nnpm  install dria\nyarn add dria\npnpm add dria\nbun  add dria\n```\n\n## Usage\n\nTo begin, import Dria to your code:\n\n```ts\nimport Dria from \"dria\";\n```\n\n### Queries\n\nWith Dria, you can connect to an existing knowledge uploaded to Dria by providing its contract ID. You can then ask questions to this knowledge, make vector based queries, or directly fetch embeddings with their IDs.\n\n```ts\nconst dria = new Dria({ apiKey, contractId });\n\n// a text-based search\nconst searchRes = await dria.search(\"What is the capital of France?\");\n\n// a vector-based query\nconst queryRes = await dria.query([0.1, 0.2, 0.3]);\n\n// fetch data for specific ids\nconst queryRes = await dria.fetch([0, 1, 2]);\n```\n\n> [!TIP]\n>\n> You can omit the `apiKey`, in which case Dria will look for it at `DRIA_API_KEY` environment variable.\n\n### Inserting Data\n\nYou can insert new data to your existing knowledge, either as batch of texts with metadata or vectors with metadata.\n\n```ts\nconst dria = new Dria({ apiKey, contractId });\n\n// insert raw text, which will be converted to vector embeddings\n// with respect to the model used by this contract\nconst insertTextRes = await dria.insertTexts([\n  { text: \"I am a text.\", metadata: { fromReadme: true } },\n  { text: \"I am another text.\", metadata: { fromReadme: true } },\n]);\n\n// or, compute embeddings on your own and insert the vectors\nconst insertTextRes = await dria.insertTexts([\n  { vector: [0.1, 0.2, 0.3], metadata: { fromReadme: true } },\n  { vector: [0.3, 0.2, 0.1], metadata: { fromReadme: true } },\n]);\n```\n\n### Creating a Knowledge\n\nA new knowledge can be created with Dria client as well. In this example, we omit the `contractId` that was provided to the constructor, since we don't have a contract yet. After deploying a contract, we will set that field manually and we will then be able to call all functions described above so far!\n\n```ts\nconst dria = new Dria({ apiKey });\n\ncontractId = await dria.create(\n  \"My New Contract,\n  \"jina-embeddings-v2-base-en\",\n  \"Science\",\n);\ndria.contractId = contractId;\n```\n\nOur client supports a variety of text embedding models by default:\n\n- OpenAI's Text Embeddings-2 Ada (text-embedding-ada-002)\n- OpenAI's Text Embeddings-3 Small (text-embedding-3-large)\n- OpenAI's Text Embeddings-3 Large (text-embedding-ada-002)\n- Jina's Embeddings V2 Base EN (jina-embeddings-v2-base-en)\n- Jina's Embeddings V2 Small EN (jina-embeddings-v2-small-en)\n\n> [!WARNING]\n>\n> If you provide a different embedding model when creating a contract, you are expected to use those same embeddings models to create vectors from text queries, and call the `query` method.\n\n### Metadata Types\n\nEach knowledge may have a different metadata type, based on the content they were created from. For example, a CSV knowledge will have each column as a separate field in the metadata. You can provide the metadata type as a template parameter so that all methods are type-safe:\n\n```ts\ntype MetadataType = { id: number; foo: string; bar: boolean };\nconst dria = new Dria<MetadataType>();\n\n// metadata is typed as given above\nconst res = dria.fetch([0]);\n```\n\nMetadata type can be overridden for each method as well, if the need may be:\n\n```ts\nconst res = dria.fetch<{ page: number; source: string }>([0]);\n```\n\n## Examples\n\nYou can check out some [examples](./examples/):\n\n- **Simple**: Query a knowledge directly.\n- **Langchain**: Use Dria retriever in an AI agent of [LangChain](https://github.com/langchain-ai/langchainjs/).\n\n## Building\n\nYou can build the library for NPM via:\n\n```sh\nbun run build\nbun b # alias\n```\n\nWe are using Bun's own [bundler](https://bun.sh/docs/bundler).\n\n> [!NOTE]\n>\n> The protobuf files are included in the repo, but they can be generated again via:\n>\n> ```sh\n> bun proto\n> ```\n\n## Testing\n\nFor the tests, you will need an API key at `DRIA_API_KEY` environment variable, which you can provide in an `.env.test` file. You can run tests via:\n\n```sh\nbun run test\nbun t # alias\n```\n\nYou can also specify the test titles (as they appear in `describe`, `it` or `test`).\n\n```sh\nbun t -t \"test-name\"\n```\n","readmeFilename":"README.md"}